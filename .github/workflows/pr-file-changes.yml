name: PR File Changes

permissions:
  issues: write
  pull-requests: write

on:
  workflow_call:
    outputs:
      file_changes:
        description: "JSON output of file changes"
        value: ${{ jobs.get_changed_files.outputs.result }}

jobs:
  get_changed_files:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.get-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: get-changes
        run: |
          FILE_CHANGES=$(git diff --name-status HEAD^ | awk '{print "{\"filename\": \""$2"\", \"operation\": \""($1 == "A" ? "added" : ($1 == "M" ? "modified" : "deleted"))"\"}"}' | jq -s .)
          echo "changes=$(echo $FILE_CHANGES)" >> $GITHUB_OUTPUT

  post_comment:
    runs-on: ubuntu-latest
    needs: get_changed_files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Installing tooling
        run: |
          sudo apt update
          sudo apt install gh jq -y
      - name: Post comment on PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          TARGET_BRANCH=$(jq --raw-output .pull_request.base.ref "$GITHUB_EVENT_PATH")
          DEFAULT_BRANCH=${{ github.event.repository.default_branch }}

          if [[ "$TARGET_BRANCH" == "$DEFAULT_BRANCH" ]]; then
            FORMATTED_JSON=$(echo '${{ needs.get_changed_files.outputs.result }}' | jq '.')
            COMMENT=$(printf "### Changed files\n\n\`\`\`json\n%s\n\`\`\`" "$FORMATTED_JSON")
          else
            COMMENT="‚ùå This PR targets \`$TARGET_BRANCH\`, but it must target \`$DEFAULT_BRANCH\`."
          fi

          gh pr comment "$PR_NUMBER" --body "$COMMENT"
